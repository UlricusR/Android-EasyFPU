{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is EasyFPU about? EasyFPU is an Android app - mainly for Type 1 Diabetes patients - to ease the calculation of carbs, fat-protein-units (FPUs) (aka extended carbs, e-carbs or fake carbs) and their matching absorption time. Disclaimer Warning I need and want to emphasize that the use of this app is on your own risk! The Fat-Protein-Units and absorption time calculated by this app are based on the recommendations of nutrition scientific articles, see list of links on this page. The app calculates FPUs by taking the total calories of a food item and subtracting the calories based on carbs (4 kcal/g). The difference represents the calories based on fat and proteins. For more details, please refer to the chapter on the absorption scheme. Warning What you will do with this calculation, is completely up to you - you act on your own risk! Although I have thoroughly tested the calculation algorithm (and use it for a pump based insulin therapy in my own family), I refuse to guarantee its correctness. Just a few hints from our personal experience: If you're looping, the loop loves to know if there are further carbs to be expected over time. It will then adjust its BG projection and - if activated by you - increase amount the and/or number of auto-boluses. If your auto-bolus settings limit the bolus amount for safety reasons, you may experience a high proposed manual bolus (e.g. 1.5 units at a BG of 180 mg/dl). Be careful before you really apply this, better reduce to half the amount in the beginning. In any case: Closely watch your BG when first starting to work with FPUs. Motivation and Concept The motivation to program EasyFPU was to ease the calculation of Fat-Protein-Units especially for children with Type 1 Diabetes. Furthermore I was kept asking if I could provide the EasyFPU app, which is available for Android already for quite a while, for iOS. And as I've always been curious to learn a new programming language and system, here we go! Although carbs are calculated as well, this can be done by many apps today. However, meals with a high portion of fat or protein lead to a late increase in blood glucose. Modern pump therapies can counter this by a delayed bolus. The calculation of the amount of FPUs and the corresponding absorption time is not trivial - and this is exactly what this app is doing. The concept is simple: The user picks one or more food items from a list and enters their amount - optionally he can pick one of max. three pre-defined typical amounts. With this information the app will calculate FPUs. Before being able to use the app, the user (or the user\u2019s parents) need to invest a bit of time and effort to define the food items. The food list is deliberately empty when first installing the app, as every user has his own preferred food ( sample data can be downloaded). You may limit your food list to food with a high fat or protein portion, like pizza, McDonals food, etc. EasyFPU is also available for iOS. The iOS version is the newer one with more features , as I'm using it myself as part of an insulin therapy within my family. Privacy Policy Note This section contains the privacy policy of the Android app. The privacy policy of this website can be found here . The Android App EasyFPU doesn't store any personal data, nor does it use any third party service that might store personal data. The food list is stored locally on your smartphone and does not contain any personal data. Issues and Requests These issues are known to me. Should you stumble over new issues, please submit an it via the same link. As I'm not further developing EasyFPU for Android, I will only fix issues. Contribute If you want to take over and further develop EasyFPU for Android, you're welcome! It's all Open Source and on GitHub . Otherwise, just buy me a coffee - appreciated!","title":"What is EasyFPU about?"},{"location":"#what-is-easyfpu-about","text":"EasyFPU is an Android app - mainly for Type 1 Diabetes patients - to ease the calculation of carbs, fat-protein-units (FPUs) (aka extended carbs, e-carbs or fake carbs) and their matching absorption time.","title":"What is EasyFPU about?"},{"location":"#disclaimer","text":"Warning I need and want to emphasize that the use of this app is on your own risk! The Fat-Protein-Units and absorption time calculated by this app are based on the recommendations of nutrition scientific articles, see list of links on this page. The app calculates FPUs by taking the total calories of a food item and subtracting the calories based on carbs (4 kcal/g). The difference represents the calories based on fat and proteins. For more details, please refer to the chapter on the absorption scheme. Warning What you will do with this calculation, is completely up to you - you act on your own risk! Although I have thoroughly tested the calculation algorithm (and use it for a pump based insulin therapy in my own family), I refuse to guarantee its correctness. Just a few hints from our personal experience: If you're looping, the loop loves to know if there are further carbs to be expected over time. It will then adjust its BG projection and - if activated by you - increase amount the and/or number of auto-boluses. If your auto-bolus settings limit the bolus amount for safety reasons, you may experience a high proposed manual bolus (e.g. 1.5 units at a BG of 180 mg/dl). Be careful before you really apply this, better reduce to half the amount in the beginning. In any case: Closely watch your BG when first starting to work with FPUs.","title":"Disclaimer"},{"location":"#motivation-and-concept","text":"The motivation to program EasyFPU was to ease the calculation of Fat-Protein-Units especially for children with Type 1 Diabetes. Furthermore I was kept asking if I could provide the EasyFPU app, which is available for Android already for quite a while, for iOS. And as I've always been curious to learn a new programming language and system, here we go! Although carbs are calculated as well, this can be done by many apps today. However, meals with a high portion of fat or protein lead to a late increase in blood glucose. Modern pump therapies can counter this by a delayed bolus. The calculation of the amount of FPUs and the corresponding absorption time is not trivial - and this is exactly what this app is doing. The concept is simple: The user picks one or more food items from a list and enters their amount - optionally he can pick one of max. three pre-defined typical amounts. With this information the app will calculate FPUs. Before being able to use the app, the user (or the user\u2019s parents) need to invest a bit of time and effort to define the food items. The food list is deliberately empty when first installing the app, as every user has his own preferred food ( sample data can be downloaded). You may limit your food list to food with a high fat or protein portion, like pizza, McDonals food, etc. EasyFPU is also available for iOS. The iOS version is the newer one with more features , as I'm using it myself as part of an insulin therapy within my family.","title":"Motivation and Concept"},{"location":"#privacy-policy","text":"Note This section contains the privacy policy of the Android app. The privacy policy of this website can be found here . The Android App EasyFPU doesn't store any personal data, nor does it use any third party service that might store personal data. The food list is stored locally on your smartphone and does not contain any personal data.","title":"Privacy Policy"},{"location":"#issues-and-requests","text":"These issues are known to me. Should you stumble over new issues, please submit an it via the same link. As I'm not further developing EasyFPU for Android, I will only fix issues.","title":"Issues and Requests"},{"location":"#contribute","text":"If you want to take over and further develop EasyFPU for Android, you're welcome! It's all Open Source and on GitHub . Otherwise, just buy me a coffee - appreciated!","title":"Contribute"},{"location":"manual/","text":"User Manual Installation Get the app from the Google Play Store: The Main Screen with the Food List The main screen appears when opening the app and contains a list of food items. It will be empty after first installation - after updating the app, the existing list will be taken over. A food item in the sense of this app represents one component of a meal, which is \u201ehomogenous\u201c in itself. Several food items make up a meal. For example: A Schnitzel with French Fries and Ketchup (the meal) consists of the Schnitzel, the Fries and Ketchup (the food items). The food list on the main screen is sorted in alphabetical order. It is recommended to assign unique names to each food item and not repeat existing names, although the app won\u2018t hinder you to do so. When clicking the small star in the top right corner of the food list, only food items marked as favorites will be displayed. Favorites can either be defined in the Edit Food dialog or via the context menu of each food item. Furthermore you may search for food using the search field (any string in the food name). Adding new Food Items Tapping the grey Plus symbol on the main screen opens a dialog to add a new food item. The following entries are mandatory: Name: The (unique) name of the food item. Favorite: Whether or not the food will be displayed in the list of favorite food items. Calories per 100g: The calories of the food per 100g in kcal. Carbs per 100g: The carbs per 100g of the food in grams. Optionally you can define up to three typical amounts for each food item, and you can comment each of them. The respective comment will later be displayed in the dialog to define a new meal and allows users to easily select a certain amount. Typical amounts can be used for defined food sizes and ease the use especially for children. After saving a new food item, it will be displayed in the food list (sorted by alphabet). Calculation of a Meal A meal consists of at least one food item. To calculate a meal, select at least one food item from the food list on the main screen and tap the magenta colored Meal button with the cutlery symbol. A dialog appears to enter the amounts. If typical amounts have been defined while adding the food item, these can now be selected for each food item. Alternatively you can enter your own food amount. These amounts should represent the actually consumed amount. After all amounts have been entered, tap the arrow symbol to start the calculation. The following screen shows the resulting values of the total meal (on top in yellow) and of all individual food items. These are: The amount in grams The carbs in grams The Fat-Protein-Units (FPUs) The extended carbs in grams - equals to FPUs multiplied by 10 The absorption time in hours Modern Type 1 Diabetes insulin pumps allow entering FPUs or extended carbs (depends on the pump) as delayed bolus over the absorption time. This reduces late blood glucose increase caused by many FPUs (e.g. for Pizza). The Context Menu of a Food Item Tapping the three vertical dots of a food item opens the context menu. The following options are available: Set as favorite / Remove from favorites: Adds / removes the food item to / from the favorites Edit: Opens the dialog to edit the food item - the dialog is the same as for adding new food Delete: Deletes the food item from the list The Main Menu and the Settings Opening the main menu using the three vertical dots in the top right corner of the main screen gives you the following options: Settings: Opens the settings dialog (see below) About: Information about the app and a link to this documentation The following setting groups are available: Absorption Scheme: Edit absorption scheme: Opens the dialog to edit the absorption scheme Maximum FPUs: The maximum amount of Fat-Protein-Units that can be selected for the absorption scheme Maximum absorption time: The maximum absorption time that can be selected for the absorption scheme Database: Export as JSON: Exports the database in human readable JSON format for exchange or backup Import from JSON: Imports the database from a JSON file Export raw database: Opens a dialog to export the app database in raw format (not recommended) The Absorption Scheme The absorption scheme defines, which absorption time is proposed for a given amount of FPUs. The pre-defined absorption scheme matches today\u2018s recommendations from nutrition science and is as follows: 1 FPU (= 10g extended carbs): 3 hours absorption time 2 FPUs (= 20g extended carbs): 4 hours absorption time 3 FPUs (= 30g extended carbs): 5 hours absorption time 4 FPUs (= 40g extended carbs): 6 hours absorption time 6 FPUs (= 60g extended carbs) and more: 8 hours absorption time The calculation logic is as follows: Step 1: Calculation of the total calories, e.g. for 72g Chicken McNuggets (249 kcal per 100g): 72g * 249 kcal / 100g = 179 kcal Step 2: Calculation of the calories caused by carbs (4 kcal per 1g of carbs), e.g. for 72g Chicken McNuggets (17g carbs per 100g): 72g * 17gCarbs / 100g * 4 kcal/gCarbs = 49 kcal Step 3: Substract the calories caused by carbs from the total calories, e.g.: 179 kcal - 49 kcal = 130 kcal Step 4: As 100 kcal represent 1 FPU, this results in 1.3 FPUs respectively 13g of extended carbs. Step 5: The FPUs will be rounded, in our example to 1 FPU, and the absorption time will be looked up, in our example 3 hours. Editing the absorption scheme is only recommended for advanced users, who have experience in FPUs / absorption time. The absorption scheme can always be reset to the pre-defined scheme above. Sample Data You may download this JSON file with some sample food items (food names are in German only). Import it via the main menu (Import database from JSON). However, I strongly recommend to add your own food items, as e.g. typical amounts vary from person to person.","title":"User Manual"},{"location":"manual/#user-manual","text":"","title":"User Manual"},{"location":"manual/#installation","text":"Get the app from the Google Play Store:","title":"Installation"},{"location":"manual/#the-main-screen-with-the-food-list","text":"The main screen appears when opening the app and contains a list of food items. It will be empty after first installation - after updating the app, the existing list will be taken over. A food item in the sense of this app represents one component of a meal, which is \u201ehomogenous\u201c in itself. Several food items make up a meal. For example: A Schnitzel with French Fries and Ketchup (the meal) consists of the Schnitzel, the Fries and Ketchup (the food items). The food list on the main screen is sorted in alphabetical order. It is recommended to assign unique names to each food item and not repeat existing names, although the app won\u2018t hinder you to do so. When clicking the small star in the top right corner of the food list, only food items marked as favorites will be displayed. Favorites can either be defined in the Edit Food dialog or via the context menu of each food item. Furthermore you may search for food using the search field (any string in the food name).","title":"The Main Screen with the Food List"},{"location":"manual/#adding-new-food-items","text":"Tapping the grey Plus symbol on the main screen opens a dialog to add a new food item. The following entries are mandatory: Name: The (unique) name of the food item. Favorite: Whether or not the food will be displayed in the list of favorite food items. Calories per 100g: The calories of the food per 100g in kcal. Carbs per 100g: The carbs per 100g of the food in grams. Optionally you can define up to three typical amounts for each food item, and you can comment each of them. The respective comment will later be displayed in the dialog to define a new meal and allows users to easily select a certain amount. Typical amounts can be used for defined food sizes and ease the use especially for children. After saving a new food item, it will be displayed in the food list (sorted by alphabet).","title":"Adding new Food Items"},{"location":"manual/#calculation-of-a-meal","text":"A meal consists of at least one food item. To calculate a meal, select at least one food item from the food list on the main screen and tap the magenta colored Meal button with the cutlery symbol. A dialog appears to enter the amounts. If typical amounts have been defined while adding the food item, these can now be selected for each food item. Alternatively you can enter your own food amount. These amounts should represent the actually consumed amount. After all amounts have been entered, tap the arrow symbol to start the calculation. The following screen shows the resulting values of the total meal (on top in yellow) and of all individual food items. These are: The amount in grams The carbs in grams The Fat-Protein-Units (FPUs) The extended carbs in grams - equals to FPUs multiplied by 10 The absorption time in hours Modern Type 1 Diabetes insulin pumps allow entering FPUs or extended carbs (depends on the pump) as delayed bolus over the absorption time. This reduces late blood glucose increase caused by many FPUs (e.g. for Pizza).","title":"Calculation of a Meal"},{"location":"manual/#the-context-menu-of-a-food-item","text":"Tapping the three vertical dots of a food item opens the context menu. The following options are available: Set as favorite / Remove from favorites: Adds / removes the food item to / from the favorites Edit: Opens the dialog to edit the food item - the dialog is the same as for adding new food Delete: Deletes the food item from the list","title":"The Context Menu of a Food Item"},{"location":"manual/#the-main-menu-and-the-settings","text":"Opening the main menu using the three vertical dots in the top right corner of the main screen gives you the following options: Settings: Opens the settings dialog (see below) About: Information about the app and a link to this documentation The following setting groups are available: Absorption Scheme: Edit absorption scheme: Opens the dialog to edit the absorption scheme Maximum FPUs: The maximum amount of Fat-Protein-Units that can be selected for the absorption scheme Maximum absorption time: The maximum absorption time that can be selected for the absorption scheme Database: Export as JSON: Exports the database in human readable JSON format for exchange or backup Import from JSON: Imports the database from a JSON file Export raw database: Opens a dialog to export the app database in raw format (not recommended)","title":"The Main Menu and the Settings"},{"location":"manual/#the-absorption-scheme","text":"The absorption scheme defines, which absorption time is proposed for a given amount of FPUs. The pre-defined absorption scheme matches today\u2018s recommendations from nutrition science and is as follows: 1 FPU (= 10g extended carbs): 3 hours absorption time 2 FPUs (= 20g extended carbs): 4 hours absorption time 3 FPUs (= 30g extended carbs): 5 hours absorption time 4 FPUs (= 40g extended carbs): 6 hours absorption time 6 FPUs (= 60g extended carbs) and more: 8 hours absorption time The calculation logic is as follows: Step 1: Calculation of the total calories, e.g. for 72g Chicken McNuggets (249 kcal per 100g): 72g * 249 kcal / 100g = 179 kcal Step 2: Calculation of the calories caused by carbs (4 kcal per 1g of carbs), e.g. for 72g Chicken McNuggets (17g carbs per 100g): 72g * 17gCarbs / 100g * 4 kcal/gCarbs = 49 kcal Step 3: Substract the calories caused by carbs from the total calories, e.g.: 179 kcal - 49 kcal = 130 kcal Step 4: As 100 kcal represent 1 FPU, this results in 1.3 FPUs respectively 13g of extended carbs. Step 5: The FPUs will be rounded, in our example to 1 FPU, and the absorption time will be looked up, in our example 3 hours. Editing the absorption scheme is only recommended for advanced users, who have experience in FPUs / absorption time. The absorption scheme can always be reset to the pre-defined scheme above.","title":"The Absorption Scheme"},{"location":"manual/#sample-data","text":"You may download this JSON file with some sample food items (food names are in German only). Import it via the main menu (Import database from JSON). However, I strongly recommend to add your own food items, as e.g. typical amounts vary from person to person.","title":"Sample Data"},{"location":"de/","text":"Was ist EasyFPE? EasyFPE ist eine Android-App - haupts\u00e4chlich f\u00fcr Typ 1-Diabetiker - zum einfachen Berechnen von Kohlenhydraten, Fett-Protein-Einheiten (FPE) bzw. verz\u00f6gerten Kohlenhydraten (auch bekannt als e-Carbs oder Fake Carbs) und dazugeh\u00f6riger Absorptionszeit. Haftungsausschluss Warnung Ich muss und will vorab darauf hinweisen, dass die Nutzung dieser App auf eigenes Risiko erfolgt. Die von der App errechneten Fett-Protein-Einheiten und Absorptionszeiten orientieren sich an den Empfehlungen z.B. der Deutschen Diabeteshilfe (siehe Links), wobei mit Absicht die vereinfachte Berechnungslogik angewandt wird: Statt die Fettmenge eines Essens mit 9 kcal/g und die Proteinmenge mit 4 kcal/g zu berechnen, werden von der Gesamtkalorienmenge die Kalorien aus Kohlenhydraten (4 kcal/g) abgezogen. Die Differenz ergibt dann die Kalorienmenge aus Fett und Proteinen. Die detaillierten Berechnungsschritte sind im Kapitel \u00fcber das Absorptionsschema beschrieben. Vorteil dieser Methode: Der Nutzer muss nur die Kalorien und die Kohlenhydrate pro 100g Essen eingeben und nicht zus\u00e4tzlich noch die spezifischen Fett- und Proteinmengen. Warnung Wie Sie mit dieser Berechnung dann umgehen, ist Ihr eigenes Risiko. Obwohl ich den Rechenalgorithmus gr\u00fcndlich getestet habe und ihn selbst im Rahmen einer Insulinpumpentherapie in meiner Familie einsetze, lehne ich jede Garantie f\u00fcr dessen Korrektheit ab. Ich will hier explizit die Deutsche Diabeteshilfe zitieren, die schreibt: Deutsche Diabeteshilfe Egal ob Pumpe oder Pen \u2013 wenn Sie nach Absprache mit Ihrem Diabetologen die ersten Versuche mit Insulingaben f\u00fcr Fett-Eiwei\u00df-Einheiten machen, sollten Sie Ihren Blutzuckerspiegel sehr gut im Auge behalten. Ein paar pers\u00f6nliche Erfahrungswerte zum Schluss: Wenn Sie loopen, ist es von Vorteil, wenn der Loop wei\u00df, dass weitere Kohlenhydrate \u00fcber die n\u00e4chste Zeit zu erwarten sind. Er wird dann entweder die Menge oder die Anzahl der Autobolus-Gaben erh\u00f6hen. Wenn Ihre Auto-Bolus-Einstellungen aus Sicherheitsgr\u00fcnden eine h\u00f6here oder h\u00e4ufigere Bolusgabe verhindern, werden Sie eine sehr hohe Insulinmenge als manuelle Abgabe vorgeschlagen bekommen (z.B. 1,5 IE bei einem Blutzucker von 180). Reduzieren Sie diese Menge am Anfang aus Sicherheitsgr\u00fcnden auf die H\u00e4lfte. Und behalten Sie bei Erstanwendung bitte stets Ihren Blutzuckerverlauf im Blick. Motivation und Konzept Die Motivation zum Programmieren von EasyFPE war, insbesondere Kindern mit Typ 1-Diabetes die Berechnung von Fett-Protein-Einheiten zu erleichtern. Das Errechnen von Kohlenhydraten erfolgt quasi nebenbei, ist jedoch bei vielen Typ 1-Diabetikern schon in Fleisch und Blut \u00fcbergegangen und kann mit vielen anderen Apps auch erledigt werden. Mahlzeiten mit einem hohen Fett- oder Proteinanteil f\u00fchren jedoch sehr oft zu einem sp\u00e4ten Blutzuckeranstieg. Diesem kann in der heutigen Pumpentherapie mit einem verz\u00f6gerten Bolus entgegengewirkt werden. Allerdings ist die Berechnung der abzugebenden Einheiten und der Abgabedauer nicht trivial. Genau dies erledigt diese App. Das Konzept hierf\u00fcr ist absichtlich sehr einfach: Der Nutzer w\u00e4hlt ein oder mehrere Essen aus einer Liste aus und gibt deren Menge ein - wahlweise auch eine von bis zu drei vordefinierten typischen Mengen. Damit berechnet die App die FPE. Als Nutzer (bzw. als Eltern von Kindern mit Typ 1-Diabetes) muss man allerdings vorab etwas Zeit in das Anlegen von Essen investieren. Die Essensliste ist mit Absicht bei Erstinstallation komplett leer, da jeder sein eigenes typisches Essen hat ( Beispieldaten k\u00f6nnen heruntergeladen werden). Es kann sich allerdings darauf beschr\u00e4nkt werden, nur Essen anzulegen, welches eben einen hohen Fett- oder Proteinanteil hat, z.B. Pizza, Bratwurst, McDonalds-Essen, usw. EasyFPE gibt es auch f\u00fcr iOS, wobei die iOS-Variante die neuere ist mit deutlich mehr Features , da ich sie selbst bei mir in der Familie im Rahmen einer Insulintherapie nutze. Datenschutzerkl\u00e4rung Hinweis Dieser Abschnitt beinhaltet die Datenschutzerkl\u00e4rung der Android-App. Die Datenschutzerkl\u00e4rung der Webseite finden an dieser Stelle . Die Android-App EasyFPE speichert keinerlei pers\u00f6nliche Informationen und nutzt auch keinen Drittanbieter-Service, der dies tut. Die Essensliste wird auf Ihrem Smartphone gespeichert und enth\u00e4lt keinerlei pers\u00f6nliche Informationen. Probleme und W\u00fcnsche Diese Probleme sind mir bekannt. Sollten Sie \u00fcber neue Probleme stolpern, die mir noch nicht bekannt sind, k\u00f6nnen Sie unter gleichem Link ein Issue \u00f6ffnen. Da ich EasyFPE f\u00fcr Android nicht mehr weiterentwickle, werden nur Fehler behoben. Unterst\u00fctzung Sollten Sie die App weiterentwickeln wollen, herzlich gerne - es ist alles Open Source und auf GitHub verf\u00fcgbar. Ansonsten freue ich mich nat\u00fcrlich \u00fcber jeden spendierten Kaffee...","title":"Was ist EasyFPE?"},{"location":"de/#was-ist-easyfpe","text":"EasyFPE ist eine Android-App - haupts\u00e4chlich f\u00fcr Typ 1-Diabetiker - zum einfachen Berechnen von Kohlenhydraten, Fett-Protein-Einheiten (FPE) bzw. verz\u00f6gerten Kohlenhydraten (auch bekannt als e-Carbs oder Fake Carbs) und dazugeh\u00f6riger Absorptionszeit.","title":"Was ist EasyFPE?"},{"location":"de/#haftungsausschluss","text":"Warnung Ich muss und will vorab darauf hinweisen, dass die Nutzung dieser App auf eigenes Risiko erfolgt. Die von der App errechneten Fett-Protein-Einheiten und Absorptionszeiten orientieren sich an den Empfehlungen z.B. der Deutschen Diabeteshilfe (siehe Links), wobei mit Absicht die vereinfachte Berechnungslogik angewandt wird: Statt die Fettmenge eines Essens mit 9 kcal/g und die Proteinmenge mit 4 kcal/g zu berechnen, werden von der Gesamtkalorienmenge die Kalorien aus Kohlenhydraten (4 kcal/g) abgezogen. Die Differenz ergibt dann die Kalorienmenge aus Fett und Proteinen. Die detaillierten Berechnungsschritte sind im Kapitel \u00fcber das Absorptionsschema beschrieben. Vorteil dieser Methode: Der Nutzer muss nur die Kalorien und die Kohlenhydrate pro 100g Essen eingeben und nicht zus\u00e4tzlich noch die spezifischen Fett- und Proteinmengen. Warnung Wie Sie mit dieser Berechnung dann umgehen, ist Ihr eigenes Risiko. Obwohl ich den Rechenalgorithmus gr\u00fcndlich getestet habe und ihn selbst im Rahmen einer Insulinpumpentherapie in meiner Familie einsetze, lehne ich jede Garantie f\u00fcr dessen Korrektheit ab. Ich will hier explizit die Deutsche Diabeteshilfe zitieren, die schreibt: Deutsche Diabeteshilfe Egal ob Pumpe oder Pen \u2013 wenn Sie nach Absprache mit Ihrem Diabetologen die ersten Versuche mit Insulingaben f\u00fcr Fett-Eiwei\u00df-Einheiten machen, sollten Sie Ihren Blutzuckerspiegel sehr gut im Auge behalten. Ein paar pers\u00f6nliche Erfahrungswerte zum Schluss: Wenn Sie loopen, ist es von Vorteil, wenn der Loop wei\u00df, dass weitere Kohlenhydrate \u00fcber die n\u00e4chste Zeit zu erwarten sind. Er wird dann entweder die Menge oder die Anzahl der Autobolus-Gaben erh\u00f6hen. Wenn Ihre Auto-Bolus-Einstellungen aus Sicherheitsgr\u00fcnden eine h\u00f6here oder h\u00e4ufigere Bolusgabe verhindern, werden Sie eine sehr hohe Insulinmenge als manuelle Abgabe vorgeschlagen bekommen (z.B. 1,5 IE bei einem Blutzucker von 180). Reduzieren Sie diese Menge am Anfang aus Sicherheitsgr\u00fcnden auf die H\u00e4lfte. Und behalten Sie bei Erstanwendung bitte stets Ihren Blutzuckerverlauf im Blick.","title":"Haftungsausschluss"},{"location":"de/#motivation-und-konzept","text":"Die Motivation zum Programmieren von EasyFPE war, insbesondere Kindern mit Typ 1-Diabetes die Berechnung von Fett-Protein-Einheiten zu erleichtern. Das Errechnen von Kohlenhydraten erfolgt quasi nebenbei, ist jedoch bei vielen Typ 1-Diabetikern schon in Fleisch und Blut \u00fcbergegangen und kann mit vielen anderen Apps auch erledigt werden. Mahlzeiten mit einem hohen Fett- oder Proteinanteil f\u00fchren jedoch sehr oft zu einem sp\u00e4ten Blutzuckeranstieg. Diesem kann in der heutigen Pumpentherapie mit einem verz\u00f6gerten Bolus entgegengewirkt werden. Allerdings ist die Berechnung der abzugebenden Einheiten und der Abgabedauer nicht trivial. Genau dies erledigt diese App. Das Konzept hierf\u00fcr ist absichtlich sehr einfach: Der Nutzer w\u00e4hlt ein oder mehrere Essen aus einer Liste aus und gibt deren Menge ein - wahlweise auch eine von bis zu drei vordefinierten typischen Mengen. Damit berechnet die App die FPE. Als Nutzer (bzw. als Eltern von Kindern mit Typ 1-Diabetes) muss man allerdings vorab etwas Zeit in das Anlegen von Essen investieren. Die Essensliste ist mit Absicht bei Erstinstallation komplett leer, da jeder sein eigenes typisches Essen hat ( Beispieldaten k\u00f6nnen heruntergeladen werden). Es kann sich allerdings darauf beschr\u00e4nkt werden, nur Essen anzulegen, welches eben einen hohen Fett- oder Proteinanteil hat, z.B. Pizza, Bratwurst, McDonalds-Essen, usw. EasyFPE gibt es auch f\u00fcr iOS, wobei die iOS-Variante die neuere ist mit deutlich mehr Features , da ich sie selbst bei mir in der Familie im Rahmen einer Insulintherapie nutze.","title":"Motivation und Konzept"},{"location":"de/#datenschutzerklarung","text":"Hinweis Dieser Abschnitt beinhaltet die Datenschutzerkl\u00e4rung der Android-App. Die Datenschutzerkl\u00e4rung der Webseite finden an dieser Stelle . Die Android-App EasyFPE speichert keinerlei pers\u00f6nliche Informationen und nutzt auch keinen Drittanbieter-Service, der dies tut. Die Essensliste wird auf Ihrem Smartphone gespeichert und enth\u00e4lt keinerlei pers\u00f6nliche Informationen.","title":"Datenschutzerkl\u00e4rung"},{"location":"de/#probleme-und-wunsche","text":"Diese Probleme sind mir bekannt. Sollten Sie \u00fcber neue Probleme stolpern, die mir noch nicht bekannt sind, k\u00f6nnen Sie unter gleichem Link ein Issue \u00f6ffnen. Da ich EasyFPE f\u00fcr Android nicht mehr weiterentwickle, werden nur Fehler behoben.","title":"Probleme und W\u00fcnsche"},{"location":"de/#unterstutzung","text":"Sollten Sie die App weiterentwickeln wollen, herzlich gerne - es ist alles Open Source und auf GitHub verf\u00fcgbar. Ansonsten freue ich mich nat\u00fcrlich \u00fcber jeden spendierten Kaffee...","title":"Unterst\u00fctzung"},{"location":"de/manual/","text":"Benutzerhandbuch Installation Holen Sie sich die App im Google Play Store: Der Hauptbildschirm mit der Essensliste Der Hauptbildschirm erscheint beim \u00d6ffnen der App und enth\u00e4lt eine Liste mit Essen. Diese ist beim allerersten \u00d6ffnen zun\u00e4chst leer - nach einem Update wird die vorhandene Liste mit Essen \u00fcbernommen. In dieser App ist mit einem Essen eine einzelne Komponente einer Mahlzeit gemeint, die in sich \u201ehomogen\u201c ist. Mehrere Essen k\u00f6nnen dann zu einer Mahlzeit zusammengestellt werden. So best\u00fcnde z.B. die Mahlzeit Schnitzel mit Pommes und Ketchup aus drei Essen, n\u00e4mlich dem Schnitzel, den Pommes und dem Ketchup. Die Essensliste auf dem Hauptbildschirm ist alphabetisch sortiert. Es empfiehlt sich, jedem Essen einen eindeutigen Namen zu geben und nicht zweimal denselben Namen zu verwenden, auch wenn das m\u00f6glich ist (es wird von der App nicht verhindert). Klickt man auf den kleinen Stern rechts \u00fcber der Essensliste, werden nur die Essen angezeigt, die als Favoriten markiert wurden (entweder im Essensdialog oder \u00fcber das Kontextmen\u00fc des Essens). Au\u00dferdem kann man \u00fcber das Suchsymbol nach Essen suchen (beliebige Suche innerhalb der Essensnamen). Anlegen von Essen Es \u00f6ffnet sich ein Bildschirm zur Eingabe der notwendigen Daten: Name (Pflichtfeld): Der Name des Essens. Favorit: Auswahl, ob das Essen in der Liste der Lieblingsessen angezeigt wird. Kalorien pro 100g (Pflichtfeld): Die Kalorien des Essens pro 100g in kcal. Kohlenhydrate pro 100g (Pflichtfeld): Die Kohlenhydrate des Essens pro 100g in Gramm. Au\u00dferdem k\u00f6nnen optional noch drei typische Mengen des Essens eingegeben werden, jeweils versehen mit einem Kommentar. Dieser wird sp\u00e4ter bei der Auswahl des Essens im Berechnungsdialog angezeigt. Die Eingabe der typischen Menge ist besonders bei vorher bekannten Mengen n\u00fctzlich (z.B. abgepacktes Essen oder \u201e4 St\u00fcck\u201c ChickenMcNuggets) und erleichtert die sp\u00e4tere Nutzung der App insbesondere f\u00fcr Kinder. Nach dem Abspeichern erscheint das neu angelegte Essen in der Essensliste (alphabetisch sortiert) am Hauptbildschirm. Berechnen einer Mahlzeit Eine Mahlzeit besteht aus mindestens einem Essen. Zum Berechnen der Mahlzeit w\u00e4hlt man also am Hauptbildschirm mindestens ein Essen aus der Essensliste aus und tippt dann den magentafarbenen Mahlzeit-Knopf mit dem Besteck-Symbol. Es erscheint ein Dialog zur Eingabe der Essensmengen. Wurden beim Anlegen des Essens typische Mengen festgelegt, kann nun f\u00fcr jedes Essen die typische Menge gew\u00e4hlt oder immer auch eine eigene Mengenangabe gemacht werden. Die Menge sollte der tats\u00e4chlich gegessenen Menge des Essens in Gramm entsprechen. Hat man die Mengen f\u00fcr alle gew\u00e4hlten Essen festgelegt, tippt man auf das Pfeil-Symbol, um die Berechnung zu starten. Im folgenden Bildschirm werden nun ganz oben die Ergebniswerte der Gesamtmahlzeit (gelb hinterlegt) gefolgt von denen der einzelnen Essen der Mahlzeit angezeigt. Diese sind: Die Menge in Gramm Die Kohlenhydrate in Gramm Die Fett-Protein-Einheiten (FPE) Die verl\u00e4ngerten Kohlenhydrate in Gramm - entsprechen den FPE multipliziert mit 10 Die Absorptionszeit in Stunden Bei einer Typ 1-Diabetes-Pumpentherapie k\u00f6nnen nun die FPE bzw. die verl\u00e4ngerten Kohlenhydrate (je nach Pumpe) als verz\u00f6gerter Bolus \u00fcber die angegebene Absorptionszeit eingegeben werden. So verhindert man das sp\u00e4te Ansteigen des Blutzuckers durch viele Fett-Protein-Einheiten (wie z.B. bei Pizza). Das Kontextmen\u00fc eines Essens Tippt man auf die drei vertikal angeordneten Punkte rechts neben einem Essen, bekommt man folgende Men\u00fcoptionen angezeigt: Zu den Favoriten hinzuf\u00fcgen / Aus den Favoriten entfernen: F\u00fcgt ein Essen zur Liste der Favoriten hinzu oder entfernt es Bearbeiten: \u00d6ffnet einen Dialog, in dem man das Essen bearbeiten kann - der Dialog entspricht dem Dialog zum Hinzuf\u00fcgen eines neuen Essens L\u00f6schen: L\u00f6scht das Essen aus der Liste Das Hauptmen\u00fc und die Einstellungen \u00d6ffnet man das Hauptmen\u00fc mittels der drei vertikalen Punkte in der oberen rechten Ecke der App, hat man folgende Auswahlm\u00f6glichkeiten: Einstellungen: \u00d6ffnet die Einstellungen der App (siehe unten) \u00dcber: Infos \u00fcber die App und Link zur dieser Dokumentation In den Einstellungen gibt es zwei Gruppen: Gruppe \"Absorptionsschema\": Absorptionsschema bearbeiten: \u00d6ffnet den Dialog zum Bearbeiten des Absorptionsschemas Maximale FPE: Die maximale Anzahl an Fett-Protein-Einheiten, die im Absorptionsschema ausgew\u00e4hlt werden kann Maximale Absorptionszeit: Die maximale Absorptionszeit, die im Absorptionsschema ausgew\u00e4hlt werden kann Gruppe \"Datenbank\": Als JSON-Datei exportieren: Speichert die Datenbank in lesbarer Form (JSON-Format) an einem vom Benutzer frei w\u00e4hlbaren Ort ab (empfohlen f\u00fcr Datenaustausch oder Backup) Von JSON-Datei importieren: Importiert die Datenbank aus einer JSON-Datei Rohdatenbank exportieren: \u00d6ffnet einen Dialog zum Exportieren der Datenbank im Rohformat (nicht empfohlen) Das Absorptionsschema Das Absorptionsschema legt fest, welche Absorptionszeit bei einer gegebenen Anzahl an FPE ausgegeben wird. Das voreingestellte Absorptionsschema entspricht den heutigen Erkenntnissen der Ern\u00e4hrungswissenschaft und ist wie folgt angelegt: 1 FPE (= 10g verl\u00e4ngerte Kohlenhydrate): 3 Stunden Absorptionszeit 2 FPE (= 20g verl\u00e4ngerte Kohlenhydrate): 4 Stunden Absorptionszeit 3 FPE (= 30g verl\u00e4ngerte Kohlenhydrate): 5 Stunden Absorptionszeit 4 FPE (= 40g verl\u00e4ngerte Kohlenhydrate): 6 Stunden Absorptionszeit 6 FPE (= 60g verl\u00e4ngerte Kohlenhydrate) und mehr: 8 Stunden Absorptionszeit Die Berechnungslogik der App geht wie folgt vor: Schritt 1: Berechnung der Gesamtkalorien, z.B. bei 72g ChickenMcNuggets (249 kcal pro 100g): 72g * 249 kcal / 100g = 179 kcal Schritt 2: Berechnung der Kalorien, die durch Kohlenhydrate verursacht werden (4 kcal pro 1 g Kohlenhydrate), z.B. bei 72g ChickenMcNuggets (17g Kohlenhydrate pro 100g): 72g * 17gKH / 100g * 4 kcal/gKH = 49 kcal Schritt 3: Abzug der Kalorien aus Kohlenhydraten von den Gesamtkalorien; die sich ergebenden Kalorien stammen dann aus Fett und Proteinen, im obigen Beispiel: 179 kcal - 49 kcal = 130 kcal Schritt 4: Da 100 kcal einer FPE entsprechen, ergeben sich im Beispiel 1,3 FPE bzw. 13,0 g verl\u00e4ngerte Kohlenhydrate. Schritt 5: Die FPE werden gerundet, im Beispiel auf 1 FPE, und damit die Absorptionszeit nachgeschlagen, im Beispiel 3 Stunden. Eine \u00c4nderung des Absorptionsschemas wird nur ern\u00e4hrungswissenschaftlich erfahrenen Personen empfohlen. Ein Zur\u00fccksetzen auf oben genanntes Standard-Schema ist jederzeit m\u00f6glich. Beispieldaten Sie k\u00f6nnen diese JSON-Datei herunterladen und als Beispieldaten nutzen. Importieren Sie die Datei \u00fcber den Men\u00fcpunkt \"Datenbank von JSON-Datei importieren\". Ich empfehle jedoch dringend, Ihre eigenen Essen anzulegen, da auch die typischen Mengen von Person zu Person unterschiedlich sind.","title":"Benutzerhandbuch"},{"location":"de/manual/#benutzerhandbuch","text":"","title":"Benutzerhandbuch"},{"location":"de/manual/#installation","text":"Holen Sie sich die App im Google Play Store:","title":"Installation"},{"location":"de/manual/#der-hauptbildschirm-mit-der-essensliste","text":"Der Hauptbildschirm erscheint beim \u00d6ffnen der App und enth\u00e4lt eine Liste mit Essen. Diese ist beim allerersten \u00d6ffnen zun\u00e4chst leer - nach einem Update wird die vorhandene Liste mit Essen \u00fcbernommen. In dieser App ist mit einem Essen eine einzelne Komponente einer Mahlzeit gemeint, die in sich \u201ehomogen\u201c ist. Mehrere Essen k\u00f6nnen dann zu einer Mahlzeit zusammengestellt werden. So best\u00fcnde z.B. die Mahlzeit Schnitzel mit Pommes und Ketchup aus drei Essen, n\u00e4mlich dem Schnitzel, den Pommes und dem Ketchup. Die Essensliste auf dem Hauptbildschirm ist alphabetisch sortiert. Es empfiehlt sich, jedem Essen einen eindeutigen Namen zu geben und nicht zweimal denselben Namen zu verwenden, auch wenn das m\u00f6glich ist (es wird von der App nicht verhindert). Klickt man auf den kleinen Stern rechts \u00fcber der Essensliste, werden nur die Essen angezeigt, die als Favoriten markiert wurden (entweder im Essensdialog oder \u00fcber das Kontextmen\u00fc des Essens). Au\u00dferdem kann man \u00fcber das Suchsymbol nach Essen suchen (beliebige Suche innerhalb der Essensnamen).","title":"Der Hauptbildschirm mit der Essensliste"},{"location":"de/manual/#anlegen-von-essen","text":"Es \u00f6ffnet sich ein Bildschirm zur Eingabe der notwendigen Daten: Name (Pflichtfeld): Der Name des Essens. Favorit: Auswahl, ob das Essen in der Liste der Lieblingsessen angezeigt wird. Kalorien pro 100g (Pflichtfeld): Die Kalorien des Essens pro 100g in kcal. Kohlenhydrate pro 100g (Pflichtfeld): Die Kohlenhydrate des Essens pro 100g in Gramm. Au\u00dferdem k\u00f6nnen optional noch drei typische Mengen des Essens eingegeben werden, jeweils versehen mit einem Kommentar. Dieser wird sp\u00e4ter bei der Auswahl des Essens im Berechnungsdialog angezeigt. Die Eingabe der typischen Menge ist besonders bei vorher bekannten Mengen n\u00fctzlich (z.B. abgepacktes Essen oder \u201e4 St\u00fcck\u201c ChickenMcNuggets) und erleichtert die sp\u00e4tere Nutzung der App insbesondere f\u00fcr Kinder. Nach dem Abspeichern erscheint das neu angelegte Essen in der Essensliste (alphabetisch sortiert) am Hauptbildschirm.","title":"Anlegen von Essen"},{"location":"de/manual/#berechnen-einer-mahlzeit","text":"Eine Mahlzeit besteht aus mindestens einem Essen. Zum Berechnen der Mahlzeit w\u00e4hlt man also am Hauptbildschirm mindestens ein Essen aus der Essensliste aus und tippt dann den magentafarbenen Mahlzeit-Knopf mit dem Besteck-Symbol. Es erscheint ein Dialog zur Eingabe der Essensmengen. Wurden beim Anlegen des Essens typische Mengen festgelegt, kann nun f\u00fcr jedes Essen die typische Menge gew\u00e4hlt oder immer auch eine eigene Mengenangabe gemacht werden. Die Menge sollte der tats\u00e4chlich gegessenen Menge des Essens in Gramm entsprechen. Hat man die Mengen f\u00fcr alle gew\u00e4hlten Essen festgelegt, tippt man auf das Pfeil-Symbol, um die Berechnung zu starten. Im folgenden Bildschirm werden nun ganz oben die Ergebniswerte der Gesamtmahlzeit (gelb hinterlegt) gefolgt von denen der einzelnen Essen der Mahlzeit angezeigt. Diese sind: Die Menge in Gramm Die Kohlenhydrate in Gramm Die Fett-Protein-Einheiten (FPE) Die verl\u00e4ngerten Kohlenhydrate in Gramm - entsprechen den FPE multipliziert mit 10 Die Absorptionszeit in Stunden Bei einer Typ 1-Diabetes-Pumpentherapie k\u00f6nnen nun die FPE bzw. die verl\u00e4ngerten Kohlenhydrate (je nach Pumpe) als verz\u00f6gerter Bolus \u00fcber die angegebene Absorptionszeit eingegeben werden. So verhindert man das sp\u00e4te Ansteigen des Blutzuckers durch viele Fett-Protein-Einheiten (wie z.B. bei Pizza).","title":"Berechnen einer Mahlzeit"},{"location":"de/manual/#das-kontextmenu-eines-essens","text":"Tippt man auf die drei vertikal angeordneten Punkte rechts neben einem Essen, bekommt man folgende Men\u00fcoptionen angezeigt: Zu den Favoriten hinzuf\u00fcgen / Aus den Favoriten entfernen: F\u00fcgt ein Essen zur Liste der Favoriten hinzu oder entfernt es Bearbeiten: \u00d6ffnet einen Dialog, in dem man das Essen bearbeiten kann - der Dialog entspricht dem Dialog zum Hinzuf\u00fcgen eines neuen Essens L\u00f6schen: L\u00f6scht das Essen aus der Liste","title":"Das Kontextmen\u00fc eines Essens"},{"location":"de/manual/#das-hauptmenu-und-die-einstellungen","text":"\u00d6ffnet man das Hauptmen\u00fc mittels der drei vertikalen Punkte in der oberen rechten Ecke der App, hat man folgende Auswahlm\u00f6glichkeiten: Einstellungen: \u00d6ffnet die Einstellungen der App (siehe unten) \u00dcber: Infos \u00fcber die App und Link zur dieser Dokumentation In den Einstellungen gibt es zwei Gruppen: Gruppe \"Absorptionsschema\": Absorptionsschema bearbeiten: \u00d6ffnet den Dialog zum Bearbeiten des Absorptionsschemas Maximale FPE: Die maximale Anzahl an Fett-Protein-Einheiten, die im Absorptionsschema ausgew\u00e4hlt werden kann Maximale Absorptionszeit: Die maximale Absorptionszeit, die im Absorptionsschema ausgew\u00e4hlt werden kann Gruppe \"Datenbank\": Als JSON-Datei exportieren: Speichert die Datenbank in lesbarer Form (JSON-Format) an einem vom Benutzer frei w\u00e4hlbaren Ort ab (empfohlen f\u00fcr Datenaustausch oder Backup) Von JSON-Datei importieren: Importiert die Datenbank aus einer JSON-Datei Rohdatenbank exportieren: \u00d6ffnet einen Dialog zum Exportieren der Datenbank im Rohformat (nicht empfohlen)","title":"Das Hauptmen\u00fc und die Einstellungen"},{"location":"de/manual/#das-absorptionsschema","text":"Das Absorptionsschema legt fest, welche Absorptionszeit bei einer gegebenen Anzahl an FPE ausgegeben wird. Das voreingestellte Absorptionsschema entspricht den heutigen Erkenntnissen der Ern\u00e4hrungswissenschaft und ist wie folgt angelegt: 1 FPE (= 10g verl\u00e4ngerte Kohlenhydrate): 3 Stunden Absorptionszeit 2 FPE (= 20g verl\u00e4ngerte Kohlenhydrate): 4 Stunden Absorptionszeit 3 FPE (= 30g verl\u00e4ngerte Kohlenhydrate): 5 Stunden Absorptionszeit 4 FPE (= 40g verl\u00e4ngerte Kohlenhydrate): 6 Stunden Absorptionszeit 6 FPE (= 60g verl\u00e4ngerte Kohlenhydrate) und mehr: 8 Stunden Absorptionszeit Die Berechnungslogik der App geht wie folgt vor: Schritt 1: Berechnung der Gesamtkalorien, z.B. bei 72g ChickenMcNuggets (249 kcal pro 100g): 72g * 249 kcal / 100g = 179 kcal Schritt 2: Berechnung der Kalorien, die durch Kohlenhydrate verursacht werden (4 kcal pro 1 g Kohlenhydrate), z.B. bei 72g ChickenMcNuggets (17g Kohlenhydrate pro 100g): 72g * 17gKH / 100g * 4 kcal/gKH = 49 kcal Schritt 3: Abzug der Kalorien aus Kohlenhydraten von den Gesamtkalorien; die sich ergebenden Kalorien stammen dann aus Fett und Proteinen, im obigen Beispiel: 179 kcal - 49 kcal = 130 kcal Schritt 4: Da 100 kcal einer FPE entsprechen, ergeben sich im Beispiel 1,3 FPE bzw. 13,0 g verl\u00e4ngerte Kohlenhydrate. Schritt 5: Die FPE werden gerundet, im Beispiel auf 1 FPE, und damit die Absorptionszeit nachgeschlagen, im Beispiel 3 Stunden. Eine \u00c4nderung des Absorptionsschemas wird nur ern\u00e4hrungswissenschaftlich erfahrenen Personen empfohlen. Ein Zur\u00fccksetzen auf oben genanntes Standard-Schema ist jederzeit m\u00f6glich.","title":"Das Absorptionsschema"},{"location":"de/manual/#beispieldaten","text":"Sie k\u00f6nnen diese JSON-Datei herunterladen und als Beispieldaten nutzen. Importieren Sie die Datei \u00fcber den Men\u00fcpunkt \"Datenbank von JSON-Datei importieren\". Ich empfehle jedoch dringend, Ihre eigenen Essen anzulegen, da auch die typischen Mengen von Person zu Person unterschiedlich sind.","title":"Beispieldaten"}]}